 1. you need to create a react app with this command in terminal
   (npx create-react-app client) 
   and clean your react app include bootstrap CDN link on your html page inside your public folder
   .now you need to create a product listing page 
   (ProductsListingPage.js) and (ProductsListingPage.css)

   . installed axios for data fetching from api
     ( npm i axios)

   . and fetch 20 products data from api (https://fakestoreapi.com/products)

     you need to creae fully productListing page
     
 2. you need to create a product detail page     

    first you neet to react-router-dom for routing and 
    send data (id) from productListing page to  producdetails page 

    send data navigation('/product-detail',{state:{product:product[item.id-1]}})

    and receive data   const data = location.state.product with the help of useLocaton() hook

            import { useLocation } from 'react-router-dom'

 3. create a navbar page for cart 
 
4. add redux toolkit in your project

5.create cart page and add some animation on nav 
6. add cart data in localstorage

7. now you need to create a signup page and save user in datagbase

8. now i am going to create a sign in page and check user in you localStorage 

9. now to turn to create a pament page 

10. //////////////////////////// server  //////////////

11. create server folder and create first server on node js hello world 

12. you wnt to connect server with mongodb 
    1.you need mongoose package and connect
    2.and create user in datagbase

13.login user in in datagbase 















12. create razor pay testing account  here (https://x.razorpay.com). generate id and key

13. install razorpay in server folder (npm i razorpay) and create instance  in server.js file

    //rozoupay instance
    export const instance = new Razorpay({
    key_id: 'YOUR_KEY_ID',
    key_secret: 'YOUR_KEY_SECRET',
    });

    and create routes conrtollers and modles

14 . add piece of code in controllers file

 const options = {
            amount: 50000,  // amount in the smallest currency unit 100 = 1 rupaya
            currency: "INR",
          };

        const order = await instance.orders.create(options);

        console.log(order)
        res.status(201).send({
            success:true
        })

15. hit checkOut backend url in front   

16. now we will create another function on server controllers file 

   // payment verification
export const paymentVerification = (req,res) =>{
        res.status(200).send({
            success:true,
        }) 
   
}


17.add this script in html body 

   <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

18 . add this code  in pament page for paymentVerification

var options = {
    "key": "YOUR_KEY_ID", // Enter the Key ID generated from the Dashboard
    "amount": "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
    "currency": "INR",
    "name": "Acme Corp",
    "description": "Test Transaction",
    "image": "https://example.com/your_logo",
    "order_id": "order_IluGWxBm9U8zJ8", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
    "callback_url": "https://eneqd3r9zrjok.x.pipedream.net/",
    "prefill": {
        "name": "Gaurav Kumar",
        "email": "gaurav.kumar@example.com",
        "contact": "9000090000"
    },
    "notes": {
        "address": "Razorpay Corporate Office"
    },
    "theme": {
        "color": "#3399cc"
    }
};
var rzp1 = new Razorpay(options);
document.getElementById('rzp-button1').onclick = function(e){
    rzp1.open();


19. add some soce in controllers file in paymentVerification function
